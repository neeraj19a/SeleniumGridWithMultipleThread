<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="5" failed="0" total="5" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="ImdbTestCases" duration-ms="421" started-at="2019-09-22T05:33:09Z" finished-at="2019-09-22T05:33:09Z">
    <groups>
    </groups>
    <test name="CreateAccount" duration-ms="421" started-at="2019-09-22T05:33:09Z" finished-at="2019-09-22T05:33:09Z">
      <class name="com.imdb.tests.ImdbTests">
        <test-method status="FAIL" signature="setup()[pri:0, instance:com.imdb.tests.ImdbTests@614c5515]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-22T13:33:09Z" finished-at="2019-09-22T13:33:09Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: C:\Users\NEERAJ\workspace\Qardio\.\src\test\java\resources\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: C:\Users\NEERAJ\workspace\Qardio\.\src\test\java\resources\chromedriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:530)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:146)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:141)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:35)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:159)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:355)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:94)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
	at com.qardio.project.BaseTest.setup(BaseTest.java:22)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:483)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:585)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:281)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:121)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:290)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:242)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:121)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="createAccountPositiveTestCase(java.lang.reflect.Method)[pri:0, instance:com.imdb.tests.ImdbTests@614c5515]" name="createAccountPositiveTestCase" duration-ms="7" started-at="2019-09-22T13:33:09Z" finished-at="2019-09-22T13:33:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.imdb.tests.ImdbTests.createAccountPositiveTestCase(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountPositiveTestCase -->
        <test-method status="SKIP" signature="teardown()[pri:0, instance:com.imdb.tests.ImdbTests@614c5515]" name="teardown" is-config="true" duration-ms="0" started-at="2019-09-22T13:33:09Z" finished-at="2019-09-22T13:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="SKIP" signature="createAccountPasswordMisMatch(java.lang.reflect.Method)[pri:0, instance:com.imdb.tests.ImdbTests@614c5515]" name="createAccountPasswordMisMatch" duration-ms="1" started-at="2019-09-22T13:33:09Z" finished-at="2019-09-22T13:33:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.imdb.tests.ImdbTests.createAccountPasswordMisMatch(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountPasswordMisMatch -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.imdb.tests.ImdbTests@614c5515]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-22T13:33:09Z" finished-at="2019-09-22T13:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="teardown()[pri:0, instance:com.imdb.tests.ImdbTests@614c5515]" name="teardown" is-config="true" duration-ms="0" started-at="2019-09-22T13:33:09Z" finished-at="2019-09-22T13:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.imdb.tests.ImdbTests@614c5515]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-22T13:33:09Z" finished-at="2019-09-22T13:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="createAccountInvalidEmailAddress(java.lang.reflect.Method)[pri:0, instance:com.imdb.tests.ImdbTests@614c5515]" name="createAccountInvalidEmailAddress" duration-ms="0" started-at="2019-09-22T13:33:09Z" finished-at="2019-09-22T13:33:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.imdb.tests.ImdbTests.createAccountInvalidEmailAddress(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountInvalidEmailAddress -->
        <test-method status="SKIP" signature="teardown()[pri:0, instance:com.imdb.tests.ImdbTests@614c5515]" name="teardown" is-config="true" duration-ms="0" started-at="2019-09-22T13:33:09Z" finished-at="2019-09-22T13:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.imdb.tests.ImdbTests@614c5515]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-22T13:33:09Z" finished-at="2019-09-22T13:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="createAccountWithoutMandatoryFields(java.lang.reflect.Method)[pri:0, instance:com.imdb.tests.ImdbTests@614c5515]" name="createAccountWithoutMandatoryFields" duration-ms="1" started-at="2019-09-22T13:33:09Z" finished-at="2019-09-22T13:33:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.imdb.tests.ImdbTests.createAccountWithoutMandatoryFields(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- createAccountWithoutMandatoryFields -->
        <test-method status="SKIP" signature="teardown()[pri:0, instance:com.imdb.tests.ImdbTests@614c5515]" name="teardown" is-config="true" duration-ms="0" started-at="2019-09-22T13:33:09Z" finished-at="2019-09-22T13:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
        <test-method status="SKIP" signature="setup()[pri:0, instance:com.imdb.tests.ImdbTests@614c5515]" name="setup" is-config="true" duration-ms="0" started-at="2019-09-22T13:33:09Z" finished-at="2019-09-22T13:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method status="SKIP" signature="validateHyperLinksOnCreateAccountPage(java.lang.reflect.Method)[pri:0, instance:com.imdb.tests.ImdbTests@614c5515]" name="validateHyperLinksOnCreateAccountPage" duration-ms="1" started-at="2019-09-22T13:33:09Z" finished-at="2019-09-22T13:33:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.imdb.tests.ImdbTests.validateHyperLinksOnCreateAccountPage(java.lang.reflect.Method)]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- validateHyperLinksOnCreateAccountPage -->
        <test-method status="SKIP" signature="teardown()[pri:0, instance:com.imdb.tests.ImdbTests@614c5515]" name="teardown" is-config="true" duration-ms="0" started-at="2019-09-22T13:33:09Z" finished-at="2019-09-22T13:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- com.imdb.tests.ImdbTests -->
    </test> <!-- CreateAccount -->
  </suite> <!-- ImdbTestCases -->
</testng-results>
